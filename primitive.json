{
    "id": "1242c699-189e-328b-be95-69336e5a7d0e", //uuid.uuid3(uuid.uuid3(uuid.NAMESPACE_DNS, 'datadrivendiscovery.org'), "metalearn.features.metafeatures.MetaFeatures"+"0.1.8")
    "name": "metalearn.features.metafeatures.MetaFeatures",
    "common_name": "MetaFeatures",
    "description": "Extracts metafeatures from tabular data and ouputs a single metafeature vector. This currently assumes that there is no missing data.",
    "languages": ["python3.5", "python3.6"],
    "library": "metalearn",
    "version": "0.1.8",
    "source_code": "https://github.com/byu-dml/metalearn",
    "is_class": true,
    "tags": ["metafeatures", "metalearn", "metalearning"],
    "parameters": [],
    "methods_available": [
        {
            "id": "metalearn.MetaFeatures.produce",
            "name": "produce",
            "description": "Computes and returns all the metafeatures of the labeled input dataset.",
            "parameters": [
                {
                    "name": "inputs",
                    "description": "The input data that we need to calculate the metafeatures. It should look like [2, data, labels] where data is a 2d numpy array of data points.",
                    "type": "Inputs",
                    "optional": false,
                    "is_hyperparameter": false
                },
                {
                    "name": "timeout",
                    "description": "Not currently implemented. This parameter should have our method enforce a certain timeout period.",
                    "type": "float",
                    "optional": true,
                    "is_hyperparameter": false
                },
                {
                    "name": "iterations",
                    "description": "Not implemented.",
                    "type": "int",
                    "optional": true,
                    "is_hyperparameter": false
                }
            ],
            "returns": {
                "name": "metafeatures",
                "description": "A dictionary of metafeatures.",
                "type": "Outputs",
                "shape": "[1, metafeatures_dict]"
            }
        }
    ],
    "task_type": ["Feature extraction"],
    "output_type": ["FEATURES"],
    "team": "BYU",
    "schema_version": "0.1.8",
    "build": [
        {
            "type": "pip",
            "package": "metalearn"
        }
    ],
    "interface_type": "featurization",
    "compute_resources": {
        "sample_size": [30, 170, 20, 103],
        "sample_unit": ["KB", "KB", "MB", "MB"],
        "num_nodes": [1, 1, 1, 1],
        "cores_per_node": [1, 1, 1, 1],
        "gpus_per_node": [0, 0, 0, 0],
        "mem_per_node": [1, 2, 4, 8],
        "disk_per_node": [0.01, 0.01, 0.01, 0.01],
        "mem_per_gpu": [0, 0, 0, 0],
        "expected_running_time": [1, 10, 100, 3400]
    }
}
